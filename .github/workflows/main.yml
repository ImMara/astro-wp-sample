name: Build and Deploy

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build and deploy'
        required: true
        default: 'master'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Install dependencies
        run: npm ci

      - name: Set API URLs as environment variables
        run: |
          echo "WC_API_URL=${{ secrets.WC_API_URL }}" >> $GITHUB_ENV
          echo "WORDPRESS_API_URL=${{ secrets.WORDPRESS_API_URL }}" >> $GITHUB_ENV        

      - name: Build AstroJS project
        run: npm run build

      - name: FTP Deploy
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          server: ${{ secrets.SERVER }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASSWORD }}
          local-dir: ./dist/
          server-dir: /astropress/

  cleanup:
    needs: build-and-deploy
    runs-on: ubuntu-latest

    steps:
      - name: Fetch workflow runs
        id: fetch-runs
        run: |
          echo "::set-env name=AUTHORIZATION::Bearer ${{ secrets.G_TOKEN }}"
          runs=$(curl -s -H "Authorization: Bearer ${{ secrets.G_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/${{ github.workflow_id }}/runs?per_page=4" \
            | jq -r '.workflow_runs[].id')
          echo "::set-output name=runs::$runs"

      - name: Delete old runs
        run: |
          for run_id in ${{ steps.fetch-runs.outputs.runs }}; do
            if [[ $run_id != ${{ github.run_id }} ]]; then
              echo "Deleting run: $run_id"
              curl -X POST -H "Authorization: Bearer ${{ secrets.G_TOKEN }}" \
                "https://api.github.com/repos/${{ github.repository }}/actions/runs/$run_id/cancel"
            fi
          done